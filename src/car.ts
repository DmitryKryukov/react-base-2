interface IEngine {
    start(): void;
    stop(): void;
    getStatus(): string;
}

interface IWheels {
    rotate(): void;
    brake(): void;
    getStatus(): string;
}

interface ILights {
    turnOn(): void;
    turnOff(): void;
    getStatus(): string;
}

interface ICar {
    engine: IEngine;
    wheels: IWheels;
    lights: ILights;
    displayInfo(): void;
}

class BasicEngine implements IEngine {
    private running: boolean = false;

    start(): void  {
        this.running = true;
        console.log("%c‚ñ∂Ô∏è –î–≤–∏–≥–∞—Ç–µ–ª—å –∑–∞–ø—É—â–µ–Ω.", "color: green;");
    }

    stop(): void {
        this.running = false;
        console.log("%c‚è∏ –î–≤–∏–≥–∞—Ç–µ–ª—å –∑–∞–≥–ª—É—à–µ–Ω.", "color: red;");
    }

    getStatus(): string {
        return this.running ? "–î–≤–∏–≥–∞—Ç–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç." : "–î–≤–∏–≥–∞—Ç–µ–ª—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.";
    }
}

class BasicWheels implements IWheels {
    private rotating: boolean = false;

    rotate(): void  {
        this.rotating = true;
        console.log("%c‚ñ∂Ô∏è –ö–æ–ª—ë—Å–∞ –Ω–∞—á–∞–ª–∏ –≤—Ä–∞—â–∞—Ç—å—Å—è.", "color: green;");
    }
    brake(): void  {
        this.rotating = false;
        console.log("%c‚è∏ –ö–æ–ª—ë—Å–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.", "color: red;");
    }

    getStatus(): string {
        return this.rotating ? "–ö–æ–ª—ë—Å–∞ –≤—Ä–∞—â–∞—é—Ç—Å—è." : "–ö–æ–ª—ë—Å–∞ –Ω–µ –≤—Ä–∞—â–∞—é—Ç—Å—è.";
    }
}

class BasicLights implements ILights {
    private on: boolean = false;

    turnOn(): void {
        this.on = true;
        console.log("%c‚ñ∂Ô∏è –§–∞—Ä—ã –≤–∫–ª—é—á–µ–Ω—ã.", "color: green;");
    }

    turnOff(): void {
        this.on = false;
        console.log("%c‚è∏ –§–∞—Ä—ã –≤—ã–∫–ª—é—á–µ–Ω—ã.", "color: red;");
    }

    getStatus(): string {
        return this.on ? "–§–∞—Ä—ã –≥–æ—Ä—è—Ç." : "–§–∞—Ä—ã –Ω–µ –≥–æ—Ä—è—Ç.";
    }
}

class Car implements ICar {
    engine: IEngine;
    wheels: IWheels;
    lights: ILights;

    constructor() {
        this.engine = new BasicEngine();
        this.wheels = new BasicWheels();
        this.lights = new BasicLights();
    }

    displayInfo() {
        const statuses = [
            this.engine.getStatus(),
            this.wheels.getStatus(),
            this.lights.getStatus()
        ].join('\n');
        console.log(`\nüöó –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:\n${statuses}\n---\n`);
    }
}

export { Car }