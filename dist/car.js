"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Car = void 0;
class CarSystem {
    constructor(car) {
        this.isActive = false;
        this.car = car;
    }
    getStatusInternal(activeMessage, inactiveMessage) {
        return this.isActive ? activeMessage : inactiveMessage;
    }
    getStatus() {
        return this.isActive ? "–°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞." : "–°–∏—Å—Ç–µ–º–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞.";
    }
}
class BasicEngine extends CarSystem {
    constructor(car) {
        super(car);
    }
    start() {
        this.isActive = true;
        console.log("%c‚ñ∂Ô∏è –î–≤–∏–≥–∞—Ç–µ–ª—å –∑–∞–ø—É—â–µ–Ω.", "color: green;");
    }
    stop() {
        this.isActive = false;
        console.log("%c‚è∏ –î–≤–∏–≥–∞—Ç–µ–ª—å –∑–∞–≥–ª—É—à–µ–Ω.", "color: red;");
    }
    getStatus() {
        return super.getStatusInternal("–î–≤–∏–≥–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω.", "–î–≤–∏–≥–∞—Ç–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω.");
    }
}
class BasicWheels extends CarSystem {
    constructor(car) {
        super(car);
    }
    rotate() {
        this.isActive = true;
        console.log("%c‚ñ∂Ô∏è –ö–æ–ª—ë—Å–∞ –Ω–∞—á–∞–ª–∏ –≤—Ä–∞—â–∞—Ç—å—Å—è.", "color: green;");
    }
    brake() {
        this.isActive = false;
        console.log("%c‚è∏ –ö–æ–ª—ë—Å–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.", "color: red;");
    }
    getStatus() {
        return super.getStatusInternal("–ö–æ–ª—ë—Å–∞ –≤—Ä–∞—â–∞—é—Ç—Å—è.", "–ö–æ–ª—ë—Å–∞ –Ω–µ –≤—Ä–∞—â–∞—é—Ç—Å—è.");
    }
}
class BasicLights extends CarSystem {
    constructor(car) {
        super(car);
    }
    turnOn() {
        this.isActive = true;
        console.log("%c‚ñ∂Ô∏è –§–∞—Ä—ã –≤–∫–ª—é—á–µ–Ω—ã.", "color: green;");
    }
    turnOff() {
        this.isActive = false;
        console.log("%c‚è∏ –§–∞—Ä—ã –≤—ã–∫–ª—é—á–µ–Ω—ã.", "color: red;");
    }
    getStatus() {
        return super.getStatusInternal("–§–∞—Ä—ã –≥–æ—Ä—è—Ç.", "–§–∞—Ä—ã –Ω–µ –≥–æ—Ä—è—Ç.");
    }
}
class Car {
    constructor() {
        this.engine = new BasicEngine(this);
        this.wheels = new BasicWheels(this);
        this.lights = new BasicLights(this);
    }
    displayInfo() {
        const statuses = [
            this.engine.getStatus(),
            this.wheels.getStatus(),
            this.lights.getStatus()
        ].join('\n');
        console.log(`\nüöó –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:\n${statuses}\n---\n`);
    }
}
exports.Car = Car;
